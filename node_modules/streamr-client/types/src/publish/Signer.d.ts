import { MessageLayer } from 'streamr-client-protocol';
import type { EthereumConfig } from '../Config';
export declare type AuthOption = {
    ethereum?: never;
    privateKey: string | Uint8Array;
} | {
    privateKey?: never;
    ethereum: EthereumConfig;
} | {
    ethereum?: never;
    privateKey?: never;
};
export default function Signer(options: AuthOption, publishWithSignature?: string): ((streamMessage: MessageLayer.StreamMessage) => MessageLayer.StreamMessage) | (((streamMessage: MessageLayer.StreamMessage, signatureType?: import("streamr-client-protocol/dist/src/protocol/message_layer/StreamMessage").SignatureType) => Promise<MessageLayer.StreamMessage & {
    signature: any;
}>) & {
    signData: (((...args: unknown[]) => Promise<any>) & {
        clear(): void;
    }) | ((d: string) => Promise<string>);
});
