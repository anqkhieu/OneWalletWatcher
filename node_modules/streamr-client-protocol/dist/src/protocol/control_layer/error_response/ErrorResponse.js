"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.ErrorCode = void 0;
const ControlMessage_1 = __importDefault(require("../ControlMessage"));
const validations_1 = require("../../../utils/validations");
var ErrorCode;
(function (ErrorCode) {
    ErrorCode["INVALID_REQUEST"] = "INVALID_REQUEST";
    ErrorCode["ERROR_WHILE_HANDLING_REQUEST"] = "ERROR_WHILE_HANDLING_REQUEST";
    ErrorCode["AUTHENTICATION_FAILED"] = "AUTHENTICATION_FAILED";
    ErrorCode["PERMISSION_DENIED"] = "PERMISSION_DENIED";
    ErrorCode["NOT_FOUND"] = "NOT_FOUND";
    ErrorCode["FUTURE_TIMESTAMP"] = "FUTURE_TIMESTAMP";
    ErrorCode["REQUEST_FAILED"] = "REQUEST_FAILED";
    ErrorCode["RESEND_FAILED"] = "RESEND_FAILED";
    ErrorCode["UNKNOWN"] = "UNKNOWN";
})(ErrorCode = exports.ErrorCode || (exports.ErrorCode = {}));
class ErrorResponse extends ControlMessage_1.default {
    constructor({ version = ControlMessage_1.default.LATEST_VERSION, requestId, errorMessage, errorCode }) {
        super(version, ControlMessage_1.default.TYPES.ErrorResponse, requestId);
        (0, validations_1.validateIsString)('errorMessage', errorMessage);
        this.errorMessage = errorMessage;
        // Since V2
        if (version >= 2) {
            (0, validations_1.validateIsString)('errorCode', errorCode);
        }
        this.errorCode = errorCode;
    }
}
exports.default = ErrorResponse;
//# sourceMappingURL=ErrorResponse.js.map