"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const ControlMessage_1 = __importDefault(require("../ControlMessage"));
const validations_1 = require("../../../utils/validations");
const MessageRef_1 = __importDefault(require("../../message_layer/MessageRef"));
const ValidationError_1 = __importDefault(require("../../../errors/ValidationError"));
class ResendRangeRequest extends ControlMessage_1.default {
    constructor({ version = ControlMessage_1.default.LATEST_VERSION, requestId, streamId, streamPartition, fromMsgRef, toMsgRef, publisherId, msgChainId, sessionToken }) {
        super(version, ControlMessage_1.default.TYPES.ResendRangeRequest, requestId);
        (0, validations_1.validateIsNotEmptyString)('streamId', streamId);
        (0, validations_1.validateIsNotNegativeInteger)('streamPartition', streamPartition);
        (0, validations_1.validateIsType)('fromMsgRef', fromMsgRef, 'MessageRef', MessageRef_1.default);
        (0, validations_1.validateIsType)('toMsgRef', toMsgRef, 'MessageRef', MessageRef_1.default);
        (0, validations_1.validateIsString)('publisherId', publisherId, true);
        (0, validations_1.validateIsString)('msgChainId', msgChainId, true);
        (0, validations_1.validateIsString)('sessionToken', sessionToken, true);
        this.streamId = streamId;
        this.streamPartition = streamPartition;
        this.fromMsgRef = fromMsgRef;
        this.toMsgRef = toMsgRef;
        if (this.fromMsgRef.timestamp > this.toMsgRef.timestamp) {
            throw new ValidationError_1.default(`fromMsgRef.timestamp (${this.fromMsgRef.timestamp})`
                + `must be less than or equal to toMsgRef.timestamp (${this.toMsgRef.timestamp})`);
        }
        this.publisherId = publisherId;
        this.msgChainId = msgChainId;
        this.sessionToken = sessionToken;
    }
}
exports.default = ResendRangeRequest;
//# sourceMappingURL=ResendRangeRequest.js.map