/// <reference types="node" />
/**
 * Exposes customised Debug and inspect functions.
 */
import util from 'util';
import Debug from 'debug';
export declare const DEFAULT_INSPECT_OPTS: {
    maxStringLength: number;
};
declare const StreamrDebug: ((namespace: string, delimiter?: string | undefined) => Debug.Debugger) & {
    enable: (namespaces: string) => void;
    disable: () => string;
    humanize: (v: any) => string;
};
export declare type Debugger = ReturnType<typeof StreamrDebug>;
export { StreamrDebug as Debug, };
export declare function inspect(value: any, inspectOptions?: Parameters<typeof util.inspect>[1]): string;
export declare function formatWithOptions(inspectOptions: Parameters<typeof util.formatWithOptions>[0], msgFormat?: any, ...param: any[]): string;
export declare function format(msgFormat?: any, ...param: any[]): string;
