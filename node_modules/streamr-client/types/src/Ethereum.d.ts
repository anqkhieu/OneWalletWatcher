import { Provider } from '@ethersproject/providers';
import type { Signer } from '@ethersproject/abstract-signer';
import type { StreamrClient } from './StreamrClient';
export default class StreamrEthereum {
    static generateEthereumAccount(): {
        address: string;
        privateKey: string;
    };
    _getAddress?: () => Promise<string>;
    _getSigner?: () => Signer;
    _getSidechainSigner?: () => Promise<Signer>;
    client: StreamrClient;
    constructor(client: StreamrClient);
    canEncrypt(): boolean;
    getAddress(): Promise<string>;
    getSigner(): Signer;
    getSidechainSigner(): Promise<Signer>;
    /** @returns Ethers.js Provider, a connection to the Ethereum network (mainnet) */
    getMainnetProvider(): Provider;
    /** @returns Ethers.js Provider, a connection to Binance Smart Chain */
    getBinanceProvider(): Provider;
    /** @returns Ethers.js Provider, a connection to the Streamr EVM sidechain */
    getSidechainProvider(): Provider;
}
