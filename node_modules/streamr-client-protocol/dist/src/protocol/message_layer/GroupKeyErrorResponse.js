"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const validations_1 = require("../../utils/validations");
const StreamMessage_1 = __importDefault(require("./StreamMessage"));
const GroupKeyMessage_1 = __importDefault(require("./GroupKeyMessage"));
class GroupKeyErrorResponse extends GroupKeyMessage_1.default {
    constructor({ requestId, streamId, errorCode, errorMessage, groupKeyIds }) {
        super(streamId, StreamMessage_1.default.MESSAGE_TYPES.GROUP_KEY_ERROR_RESPONSE);
        (0, validations_1.validateIsString)('requestId', requestId);
        this.requestId = requestId;
        (0, validations_1.validateIsString)('errorCode', errorCode);
        this.errorCode = errorCode;
        (0, validations_1.validateIsString)('errorMessage', errorMessage);
        this.errorMessage = errorMessage;
        (0, validations_1.validateIsArray)('groupKeyIds', groupKeyIds);
        this.groupKeyIds = groupKeyIds;
    }
    toArray() {
        return [this.requestId, this.streamId, this.errorCode, this.errorMessage, this.groupKeyIds];
    }
    static fromArray(arr) {
        const [requestId, streamId, errorCode, errorMessage, groupKeyIds] = arr;
        return new GroupKeyErrorResponse({
            requestId,
            streamId,
            errorCode,
            errorMessage,
            groupKeyIds,
        });
    }
    static is(streamMessage) {
        return streamMessage.messageType === StreamMessage_1.default.MESSAGE_TYPES.GROUP_KEY_ERROR_RESPONSE;
    }
}
exports.default = GroupKeyErrorResponse;
GroupKeyMessage_1.default.classByMessageType[StreamMessage_1.default.MESSAGE_TYPES.GROUP_KEY_ERROR_RESPONSE] = GroupKeyErrorResponse;
//# sourceMappingURL=GroupKeyErrorResponse.js.map