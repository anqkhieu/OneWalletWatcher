/**
 * Wrap StreamMessageValidator in a way that ensures it can validate in parallel but
 * validation is guaranteed to resolve in the same order they were called
 * Handles caching remote calls
 */
export default function Validator(client: any, opts: any): ((...args: any) => Promise<unknown>) & {
    clear(): void;
} & {
    clear(key: any): void;
};
export class SignatureRequiredError extends Errors.ValidationError {
    constructor(streamMessage?: {
        serialize(): void;
    });
    streamMessage: {
        serialize(): void;
    };
}
import { Errors } from "streamr-client-protocol";
