{
  "{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\Alisa\\\\Documents\\\\GitHub\\\\TrendingCoins\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"configFile\":false,\"cwd\":\"C:\\\\Users\\\\Alisa\\\\Documents\\\\GitHub\\\\TrendingCoins\",\"filename\":\"C:\\\\Users\\\\Alisa\\\\Documents\\\\GitHub\\\\TrendingCoins\\\\index.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"production\",\"root\":\"C:\\\\Users\\\\Alisa\\\\Documents\\\\GitHub\\\\TrendingCoins\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"proposal-private-property-in-object\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"BinaryExpression\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"syntax-class-properties\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-numeric-separator\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-nullish-coalescing-operator\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":true,\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-json-strings\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-async-generators\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.15.8:production": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "C:\\Users\\Alisa\\Documents\\GitHub\\TrendingCoins\\",
      "caller": {
        "name": "@babel/node"
      },
      "configFile": false,
      "cwd": "C:\\Users\\Alisa\\Documents\\GitHub\\TrendingCoins",
      "filename": "C:\\Users\\Alisa\\Documents\\GitHub\\TrendingCoins\\index.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "browserslistConfigFile": false,
      "envName": "production",
      "root": "C:\\Users\\Alisa\\Documents\\GitHub\\TrendingCoins",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-private-property-in-object",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "BinaryExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "syntax-class-properties",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-numeric-separator",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-nullish-coalescing-operator",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": true,
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-json-strings",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-optional-catch-binding",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-async-generators",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Alisa\\Documents\\GitHub\\TrendingCoins\\index.js",
        "plugins": [
          "privateIn",
          "classProperties",
          "classPrivateProperties",
          "classPrivateMethods",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport",
          "exportNamespaceFrom"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Alisa\\Documents\\GitHub\\TrendingCoins\\index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Alisa\\Documents\\GitHub\\TrendingCoins\\",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nrequire('dotenv').config();\n\nconst StreamrClient = require('streamr-client');\n\nconst https = require('https');\n\nconst schedule = require('node-schedule');\n\nconst getTrending = async () => {\n  return new Promise((resolve, reject) => {\n    https.get('https://api.coingecko.com/api/v3/search/trending', res => {\n      res.on('data', data => {\n        resolve(data.toString('utf-8'));\n      });\n    }).on('error', error => {\n      reject(new Error('Error pulling from CoinGecko API!'));\n    });\n  });\n};\n\nconst publishDataToStream = async data => {\n  return new Promise((resolve, reject) => {\n    if (!process.env['STREAMR_PRIVATE_KEY']) {\n      reject(new Error('Streamr Private Key is required'));\n    }\n\n    if (!process.env['STREAMR_ID']) {\n      reject(new Error('Streamr Stream ID is required'));\n    }\n\n    const client = new StreamrClient({\n      auth: {\n        privateKey: process.env.STREAMR_PRIVATE_KEY\n      }\n    });\n    client.publish(process.env['STREAMR_ID'], data).then(() => resolve(data)).catch(error => reject(error));\n  });\n}; //\n// const URL = 'https://google.com/';\n// fetch(URL)\n// .then(res => res.text())\n// .then(text => {\n//     console.log(text);\n// })\n// .catch(err => console.log(err));\n// schedule job every 1 hour\n\n\nvar rule = new schedule.RecurrenceRule();\nrule.second = 10;\nvar j = schedule.scheduleJob(rule, function () {\n  console.log('test'); // get date in YYYY-MM-DD format\n  // let ts = Date.now()\n  // let date_ob = new Date(ts)\n  // let date = date_ob.getDate()\n  // let month = date_ob.getMonth() + 1\n  // let year = date_ob.getFullYear()\n  // console.log(year + \"-\" + month + \"-\" + date)\n  //\n  // getTrending()\n  //   .then(response => publishDataToStream(response))\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbInJlcXVpcmUiLCJjb25maWciLCJTdHJlYW1yQ2xpZW50IiwiaHR0cHMiLCJzY2hlZHVsZSIsImdldFRyZW5kaW5nIiwiUHJvbWlzZSIsInJlc29sdmUiLCJyZWplY3QiLCJnZXQiLCJyZXMiLCJvbiIsImRhdGEiLCJ0b1N0cmluZyIsImVycm9yIiwiRXJyb3IiLCJwdWJsaXNoRGF0YVRvU3RyZWFtIiwicHJvY2VzcyIsImVudiIsImNsaWVudCIsImF1dGgiLCJwcml2YXRlS2V5IiwiU1RSRUFNUl9QUklWQVRFX0tFWSIsInB1Ymxpc2giLCJ0aGVuIiwiY2F0Y2giLCJydWxlIiwiUmVjdXJyZW5jZVJ1bGUiLCJzZWNvbmQiLCJqIiwic2NoZWR1bGVKb2IiLCJjb25zb2xlIiwibG9nIl0sIm1hcHBpbmdzIjoiOztBQUFBQSxPQUFPLENBQUMsUUFBRCxDQUFQLENBQWtCQyxNQUFsQjs7QUFDQSxNQUFNQyxhQUFhLEdBQUdGLE9BQU8sQ0FBQyxnQkFBRCxDQUE3Qjs7QUFDQSxNQUFNRyxLQUFLLEdBQUdILE9BQU8sQ0FBQyxPQUFELENBQXJCOztBQUNBLE1BQU1JLFFBQVEsR0FBR0osT0FBTyxDQUFDLGVBQUQsQ0FBeEI7O0FBRUEsTUFBTUssV0FBVyxHQUFHLFlBQVk7QUFDOUIsU0FBTyxJQUFJQyxPQUFKLENBQVksQ0FBQ0MsT0FBRCxFQUFVQyxNQUFWLEtBQXFCO0FBRXRDTCxJQUFBQSxLQUFLLENBQUNNLEdBQU4sQ0FBVSxrREFBVixFQUErREMsR0FBRCxJQUFTO0FBQ3JFQSxNQUFBQSxHQUFHLENBQUNDLEVBQUosQ0FBTyxNQUFQLEVBQWdCQyxJQUFELElBQVU7QUFDdkJMLFFBQUFBLE9BQU8sQ0FBQ0ssSUFBSSxDQUFDQyxRQUFMLENBQWMsT0FBZCxDQUFELENBQVA7QUFDRCxPQUZEO0FBR0QsS0FKRCxFQUlHRixFQUpILENBSU0sT0FKTixFQUlnQkcsS0FBRCxJQUFXO0FBQ3hCTixNQUFBQSxNQUFNLENBQUMsSUFBSU8sS0FBSixDQUFVLG1DQUFWLENBQUQsQ0FBTjtBQUNELEtBTkQ7QUFRRCxHQVZNLENBQVA7QUFXRCxDQVpEOztBQWNBLE1BQU1DLG1CQUFtQixHQUFHLE1BQU1KLElBQU4sSUFBYztBQUN0QyxTQUFPLElBQUlOLE9BQUosQ0FBYSxDQUFDQyxPQUFELEVBQVVDLE1BQVYsS0FBcUI7QUFDckMsUUFBSSxDQUFDUyxPQUFPLENBQUNDLEdBQVIsQ0FBWSxxQkFBWixDQUFMLEVBQXlDO0FBQ3JDVixNQUFBQSxNQUFNLENBQUMsSUFBSU8sS0FBSixDQUFVLGlDQUFWLENBQUQsQ0FBTjtBQUNIOztBQUVELFFBQUksQ0FBQ0UsT0FBTyxDQUFDQyxHQUFSLENBQVksWUFBWixDQUFMLEVBQWdDO0FBQzVCVixNQUFBQSxNQUFNLENBQUMsSUFBSU8sS0FBSixDQUFVLCtCQUFWLENBQUQsQ0FBTjtBQUNIOztBQUVELFVBQU1JLE1BQU0sR0FBRyxJQUFJakIsYUFBSixDQUFrQjtBQUM3QmtCLE1BQUFBLElBQUksRUFBRTtBQUNGQyxRQUFBQSxVQUFVLEVBQUVKLE9BQU8sQ0FBQ0MsR0FBUixDQUFZSTtBQUR0QjtBQUR1QixLQUFsQixDQUFmO0FBTUFILElBQUFBLE1BQU0sQ0FBQ0ksT0FBUCxDQUFlTixPQUFPLENBQUNDLEdBQVIsQ0FBWSxZQUFaLENBQWYsRUFBMENOLElBQTFDLEVBQ0tZLElBREwsQ0FDVSxNQUFNakIsT0FBTyxDQUFDSyxJQUFELENBRHZCLEVBRUthLEtBRkwsQ0FFV1gsS0FBSyxJQUFJTixNQUFNLENBQUNNLEtBQUQsQ0FGMUI7QUFHSCxHQWxCTSxDQUFQO0FBbUJILENBcEJELEMsQ0FxQkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUdBOzs7QUFDQSxJQUFJWSxJQUFJLEdBQUcsSUFBSXRCLFFBQVEsQ0FBQ3VCLGNBQWIsRUFBWDtBQUNBRCxJQUFJLENBQUNFLE1BQUwsR0FBYyxFQUFkO0FBRUEsSUFBSUMsQ0FBQyxHQUFHekIsUUFBUSxDQUFDMEIsV0FBVCxDQUFxQkosSUFBckIsRUFBMkIsWUFBVTtBQUMzQ0ssRUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVksTUFBWixFQUQyQyxDQUUzQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNELENBWk8sQ0FBUiIsInNvdXJjZVJvb3QiOiJDOlxcVXNlcnNcXEFsaXNhXFxEb2N1bWVudHNcXEdpdEh1YlxcVHJlbmRpbmdDb2luc1xcIiwic291cmNlc0NvbnRlbnQiOlsicmVxdWlyZSgnZG90ZW52JykuY29uZmlnKClcclxuY29uc3QgU3RyZWFtckNsaWVudCA9IHJlcXVpcmUoJ3N0cmVhbXItY2xpZW50JylcclxuY29uc3QgaHR0cHMgPSByZXF1aXJlKCdodHRwcycpXHJcbmNvbnN0IHNjaGVkdWxlID0gcmVxdWlyZSgnbm9kZS1zY2hlZHVsZScpXHJcblxyXG5jb25zdCBnZXRUcmVuZGluZyA9IGFzeW5jICgpID0+IHtcclxuICByZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4ge1xyXG5cclxuICAgIGh0dHBzLmdldCgnaHR0cHM6Ly9hcGkuY29pbmdlY2tvLmNvbS9hcGkvdjMvc2VhcmNoL3RyZW5kaW5nJywgKHJlcykgPT4ge1xyXG4gICAgICByZXMub24oJ2RhdGEnLCAoZGF0YSkgPT4ge1xyXG4gICAgICAgIHJlc29sdmUoZGF0YS50b1N0cmluZygndXRmLTgnKSlcclxuICAgICAgfSlcclxuICAgIH0pLm9uKCdlcnJvcicsIChlcnJvcikgPT4ge1xyXG4gICAgICByZWplY3QobmV3IEVycm9yKCdFcnJvciBwdWxsaW5nIGZyb20gQ29pbkdlY2tvIEFQSSEnKSlcclxuICAgIH0pXHJcblxyXG4gIH0pXHJcbn1cclxuXHJcbmNvbnN0IHB1Ymxpc2hEYXRhVG9TdHJlYW0gPSBhc3luYyBkYXRhID0+IHtcclxuICAgIHJldHVybiBuZXcgUHJvbWlzZSggKHJlc29sdmUsIHJlamVjdCkgPT4ge1xyXG4gICAgICAgIGlmICghcHJvY2Vzcy5lbnZbJ1NUUkVBTVJfUFJJVkFURV9LRVknXSkge1xyXG4gICAgICAgICAgICByZWplY3QobmV3IEVycm9yKCdTdHJlYW1yIFByaXZhdGUgS2V5IGlzIHJlcXVpcmVkJykpXHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBpZiAoIXByb2Nlc3MuZW52WydTVFJFQU1SX0lEJ10pIHtcclxuICAgICAgICAgICAgcmVqZWN0KG5ldyBFcnJvcignU3RyZWFtciBTdHJlYW0gSUQgaXMgcmVxdWlyZWQnKSlcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIGNvbnN0IGNsaWVudCA9IG5ldyBTdHJlYW1yQ2xpZW50KHtcclxuICAgICAgICAgICAgYXV0aDoge1xyXG4gICAgICAgICAgICAgICAgcHJpdmF0ZUtleTogcHJvY2Vzcy5lbnYuU1RSRUFNUl9QUklWQVRFX0tFWSxcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0pXHJcblxyXG4gICAgICAgIGNsaWVudC5wdWJsaXNoKHByb2Nlc3MuZW52WydTVFJFQU1SX0lEJ10sIGRhdGEpXHJcbiAgICAgICAgICAgIC50aGVuKCgpID0+IHJlc29sdmUoZGF0YSkpXHJcbiAgICAgICAgICAgIC5jYXRjaChlcnJvciA9PiByZWplY3QoZXJyb3IpKVxyXG4gICAgfSlcclxufVxyXG4vL1xyXG4vLyBjb25zdCBVUkwgPSAnaHR0cHM6Ly9nb29nbGUuY29tLyc7XHJcbi8vIGZldGNoKFVSTClcclxuLy8gLnRoZW4ocmVzID0+IHJlcy50ZXh0KCkpXHJcbi8vIC50aGVuKHRleHQgPT4ge1xyXG4vLyAgICAgY29uc29sZS5sb2codGV4dCk7XHJcbi8vIH0pXHJcbi8vIC5jYXRjaChlcnIgPT4gY29uc29sZS5sb2coZXJyKSk7XHJcblxyXG5cclxuLy8gc2NoZWR1bGUgam9iIGV2ZXJ5IDEgaG91clxyXG52YXIgcnVsZSA9IG5ldyBzY2hlZHVsZS5SZWN1cnJlbmNlUnVsZSgpXHJcbnJ1bGUuc2Vjb25kID0gMTBcclxuXHJcbnZhciBqID0gc2NoZWR1bGUuc2NoZWR1bGVKb2IocnVsZSwgZnVuY3Rpb24oKXtcclxuICBjb25zb2xlLmxvZygndGVzdCcpXHJcbiAgLy8gZ2V0IGRhdGUgaW4gWVlZWS1NTS1ERCBmb3JtYXRcclxuICAvLyBsZXQgdHMgPSBEYXRlLm5vdygpXHJcbiAgLy8gbGV0IGRhdGVfb2IgPSBuZXcgRGF0ZSh0cylcclxuICAvLyBsZXQgZGF0ZSA9IGRhdGVfb2IuZ2V0RGF0ZSgpXHJcbiAgLy8gbGV0IG1vbnRoID0gZGF0ZV9vYi5nZXRNb250aCgpICsgMVxyXG4gIC8vIGxldCB5ZWFyID0gZGF0ZV9vYi5nZXRGdWxsWWVhcigpXHJcbiAgLy8gY29uc29sZS5sb2coeWVhciArIFwiLVwiICsgbW9udGggKyBcIi1cIiArIGRhdGUpXHJcbiAgLy9cclxuICAvLyBnZXRUcmVuZGluZygpXHJcbiAgLy8gICAudGhlbihyZXNwb25zZSA9PiBwdWJsaXNoRGF0YVRvU3RyZWFtKHJlc3BvbnNlKSlcclxufSlcclxuIl19",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "require",
        "config",
        "StreamrClient",
        "https",
        "schedule",
        "getTrending",
        "Promise",
        "resolve",
        "reject",
        "get",
        "res",
        "on",
        "data",
        "toString",
        "error",
        "Error",
        "publishDataToStream",
        "process",
        "env",
        "client",
        "auth",
        "privateKey",
        "STREAMR_PRIVATE_KEY",
        "publish",
        "then",
        "catch",
        "rule",
        "RecurrenceRule",
        "second",
        "j",
        "scheduleJob",
        "console",
        "log"
      ],
      "mappings": ";;AAAAA,OAAO,CAAC,QAAD,CAAP,CAAkBC,MAAlB;;AACA,MAAMC,aAAa,GAAGF,OAAO,CAAC,gBAAD,CAA7B;;AACA,MAAMG,KAAK,GAAGH,OAAO,CAAC,OAAD,CAArB;;AACA,MAAMI,QAAQ,GAAGJ,OAAO,CAAC,eAAD,CAAxB;;AAEA,MAAMK,WAAW,GAAG,YAAY;AAC9B,SAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AAEtCL,IAAAA,KAAK,CAACM,GAAN,CAAU,kDAAV,EAA+DC,GAAD,IAAS;AACrEA,MAAAA,GAAG,CAACC,EAAJ,CAAO,MAAP,EAAgBC,IAAD,IAAU;AACvBL,QAAAA,OAAO,CAACK,IAAI,CAACC,QAAL,CAAc,OAAd,CAAD,CAAP;AACD,OAFD;AAGD,KAJD,EAIGF,EAJH,CAIM,OAJN,EAIgBG,KAAD,IAAW;AACxBN,MAAAA,MAAM,CAAC,IAAIO,KAAJ,CAAU,mCAAV,CAAD,CAAN;AACD,KAND;AAQD,GAVM,CAAP;AAWD,CAZD;;AAcA,MAAMC,mBAAmB,GAAG,MAAMJ,IAAN,IAAc;AACtC,SAAO,IAAIN,OAAJ,CAAa,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACrC,QAAI,CAACS,OAAO,CAACC,GAAR,CAAY,qBAAZ,CAAL,EAAyC;AACrCV,MAAAA,MAAM,CAAC,IAAIO,KAAJ,CAAU,iCAAV,CAAD,CAAN;AACH;;AAED,QAAI,CAACE,OAAO,CAACC,GAAR,CAAY,YAAZ,CAAL,EAAgC;AAC5BV,MAAAA,MAAM,CAAC,IAAIO,KAAJ,CAAU,+BAAV,CAAD,CAAN;AACH;;AAED,UAAMI,MAAM,GAAG,IAAIjB,aAAJ,CAAkB;AAC7BkB,MAAAA,IAAI,EAAE;AACFC,QAAAA,UAAU,EAAEJ,OAAO,CAACC,GAAR,CAAYI;AADtB;AADuB,KAAlB,CAAf;AAMAH,IAAAA,MAAM,CAACI,OAAP,CAAeN,OAAO,CAACC,GAAR,CAAY,YAAZ,CAAf,EAA0CN,IAA1C,EACKY,IADL,CACU,MAAMjB,OAAO,CAACK,IAAD,CADvB,EAEKa,KAFL,CAEWX,KAAK,IAAIN,MAAM,CAACM,KAAD,CAF1B;AAGH,GAlBM,CAAP;AAmBH,CApBD,C,CAqBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;;;AACA,IAAIY,IAAI,GAAG,IAAItB,QAAQ,CAACuB,cAAb,EAAX;AACAD,IAAI,CAACE,MAAL,GAAc,EAAd;AAEA,IAAIC,CAAC,GAAGzB,QAAQ,CAAC0B,WAAT,CAAqBJ,IAArB,EAA2B,YAAU;AAC3CK,EAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAD2C,CAE3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD,CAZO,CAAR",
      "sourceRoot": "C:\\Users\\Alisa\\Documents\\GitHub\\TrendingCoins\\",
      "sourcesContent": [
        "require('dotenv').config()\r\nconst StreamrClient = require('streamr-client')\r\nconst https = require('https')\r\nconst schedule = require('node-schedule')\r\n\r\nconst getTrending = async () => {\r\n  return new Promise((resolve, reject) => {\r\n\r\n    https.get('https://api.coingecko.com/api/v3/search/trending', (res) => {\r\n      res.on('data', (data) => {\r\n        resolve(data.toString('utf-8'))\r\n      })\r\n    }).on('error', (error) => {\r\n      reject(new Error('Error pulling from CoinGecko API!'))\r\n    })\r\n\r\n  })\r\n}\r\n\r\nconst publishDataToStream = async data => {\r\n    return new Promise( (resolve, reject) => {\r\n        if (!process.env['STREAMR_PRIVATE_KEY']) {\r\n            reject(new Error('Streamr Private Key is required'))\r\n        }\r\n\r\n        if (!process.env['STREAMR_ID']) {\r\n            reject(new Error('Streamr Stream ID is required'))\r\n        }\r\n\r\n        const client = new StreamrClient({\r\n            auth: {\r\n                privateKey: process.env.STREAMR_PRIVATE_KEY,\r\n            }\r\n        })\r\n\r\n        client.publish(process.env['STREAMR_ID'], data)\r\n            .then(() => resolve(data))\r\n            .catch(error => reject(error))\r\n    })\r\n}\r\n//\r\n// const URL = 'https://google.com/';\r\n// fetch(URL)\r\n// .then(res => res.text())\r\n// .then(text => {\r\n//     console.log(text);\r\n// })\r\n// .catch(err => console.log(err));\r\n\r\n\r\n// schedule job every 1 hour\r\nvar rule = new schedule.RecurrenceRule()\r\nrule.second = 10\r\n\r\nvar j = schedule.scheduleJob(rule, function(){\r\n  console.log('test')\r\n  // get date in YYYY-MM-DD format\r\n  // let ts = Date.now()\r\n  // let date_ob = new Date(ts)\r\n  // let date = date_ob.getDate()\r\n  // let month = date_ob.getMonth() + 1\r\n  // let year = date_ob.getFullYear()\r\n  // console.log(year + \"-\" + month + \"-\" + date)\r\n  //\r\n  // getTrending()\r\n  //   .then(response => publishDataToStream(response))\r\n})\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1635218484194
  },
  "{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\Alisa\\\\Documents\\\\GitHub\\\\TrendingCoins\\\\node\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"configFile\":false,\"cwd\":\"C:\\\\Users\\\\Alisa\\\\Documents\\\\GitHub\\\\TrendingCoins\",\"filename\":\"C:\\\\Users\\\\Alisa\\\\Documents\\\\GitHub\\\\TrendingCoins\\\\node\\\\app.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"production\",\"root\":\"C:\\\\Users\\\\Alisa\\\\Documents\\\\GitHub\\\\TrendingCoins\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"proposal-private-property-in-object\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"BinaryExpression\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"syntax-class-properties\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-numeric-separator\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-nullish-coalescing-operator\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":true,\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-json-strings\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-async-generators\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.15.8:production": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "C:\\Users\\Alisa\\Documents\\GitHub\\TrendingCoins\\node\\",
      "caller": {
        "name": "@babel/node"
      },
      "configFile": false,
      "cwd": "C:\\Users\\Alisa\\Documents\\GitHub\\TrendingCoins",
      "filename": "C:\\Users\\Alisa\\Documents\\GitHub\\TrendingCoins\\node\\app.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "browserslistConfigFile": false,
      "envName": "production",
      "root": "C:\\Users\\Alisa\\Documents\\GitHub\\TrendingCoins",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-private-property-in-object",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "BinaryExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "syntax-class-properties",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-numeric-separator",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-nullish-coalescing-operator",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": true,
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-json-strings",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-optional-catch-binding",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-async-generators",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Alisa\\Documents\\GitHub\\TrendingCoins\\node\\app.js",
        "plugins": [
          "privateIn",
          "classProperties",
          "classPrivateProperties",
          "classPrivateMethods",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport",
          "exportNamespaceFrom"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Alisa\\Documents\\GitHub\\TrendingCoins\\node\\app.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Alisa\\Documents\\GitHub\\TrendingCoins\\node\\",
        "sourceFileName": "app.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nrequire('dotenv').config();\n\nconst StreamrClient = require('streamr-client');\n\nvar fs = require('fs');\n\nconst publishDataToStream = async data => {\n  return new Promise((resolve, reject) => {\n    if (!process.env['STREAMR_PRIVATE_KEY']) {\n      reject(new Error('Streamr Private Key is required'));\n    }\n\n    if (!process.env['STREAMR_ID']) {\n      reject(new Error('Streamr Stream ID is required'));\n    }\n\n    const client = new StreamrClient({\n      auth: {\n        privateKey: process.env.STREAMR_PRIVATE_KEY\n      }\n    });\n    client.publish(process.env['STREAMR_ID'], data).then(() => resolve(data)).catch(error => reject(error));\n  });\n};\n\ntry {\n  var data = fs.readFileSync('file.txt', 'utf8');\n  console.log(data.toString());\n} catch (e) {\n  console.log('Error:', e.stack);\n}\n\nconsole.log('app.js - publishing data to stream'); // publishDataToStream(response))\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC5qcyJdLCJuYW1lcyI6WyJyZXF1aXJlIiwiY29uZmlnIiwiU3RyZWFtckNsaWVudCIsImZzIiwicHVibGlzaERhdGFUb1N0cmVhbSIsImRhdGEiLCJQcm9taXNlIiwicmVzb2x2ZSIsInJlamVjdCIsInByb2Nlc3MiLCJlbnYiLCJFcnJvciIsImNsaWVudCIsImF1dGgiLCJwcml2YXRlS2V5IiwiU1RSRUFNUl9QUklWQVRFX0tFWSIsInB1Ymxpc2giLCJ0aGVuIiwiY2F0Y2giLCJlcnJvciIsInJlYWRGaWxlU3luYyIsImNvbnNvbGUiLCJsb2ciLCJ0b1N0cmluZyIsImUiLCJzdGFjayJdLCJtYXBwaW5ncyI6Ijs7QUFBQUEsT0FBTyxDQUFDLFFBQUQsQ0FBUCxDQUFrQkMsTUFBbEI7O0FBQ0EsTUFBTUMsYUFBYSxHQUFHRixPQUFPLENBQUMsZ0JBQUQsQ0FBN0I7O0FBQ0EsSUFBSUcsRUFBRSxHQUFHSCxPQUFPLENBQUMsSUFBRCxDQUFoQjs7QUFHQSxNQUFNSSxtQkFBbUIsR0FBRyxNQUFNQyxJQUFOLElBQWM7QUFDdEMsU0FBTyxJQUFJQyxPQUFKLENBQWEsQ0FBQ0MsT0FBRCxFQUFVQyxNQUFWLEtBQXFCO0FBQ3JDLFFBQUksQ0FBQ0MsT0FBTyxDQUFDQyxHQUFSLENBQVkscUJBQVosQ0FBTCxFQUF5QztBQUNyQ0YsTUFBQUEsTUFBTSxDQUFDLElBQUlHLEtBQUosQ0FBVSxpQ0FBVixDQUFELENBQU47QUFDSDs7QUFFRCxRQUFJLENBQUNGLE9BQU8sQ0FBQ0MsR0FBUixDQUFZLFlBQVosQ0FBTCxFQUFnQztBQUM1QkYsTUFBQUEsTUFBTSxDQUFDLElBQUlHLEtBQUosQ0FBVSwrQkFBVixDQUFELENBQU47QUFDSDs7QUFFRCxVQUFNQyxNQUFNLEdBQUcsSUFBSVYsYUFBSixDQUFrQjtBQUM3QlcsTUFBQUEsSUFBSSxFQUFFO0FBQ0ZDLFFBQUFBLFVBQVUsRUFBRUwsT0FBTyxDQUFDQyxHQUFSLENBQVlLO0FBRHRCO0FBRHVCLEtBQWxCLENBQWY7QUFNQUgsSUFBQUEsTUFBTSxDQUFDSSxPQUFQLENBQWVQLE9BQU8sQ0FBQ0MsR0FBUixDQUFZLFlBQVosQ0FBZixFQUEwQ0wsSUFBMUMsRUFDS1ksSUFETCxDQUNVLE1BQU1WLE9BQU8sQ0FBQ0YsSUFBRCxDQUR2QixFQUVLYSxLQUZMLENBRVdDLEtBQUssSUFBSVgsTUFBTSxDQUFDVyxLQUFELENBRjFCO0FBR0gsR0FsQk0sQ0FBUDtBQW1CSCxDQXBCRDs7QUFzQkEsSUFBSTtBQUNBLE1BQUlkLElBQUksR0FBR0YsRUFBRSxDQUFDaUIsWUFBSCxDQUFnQixVQUFoQixFQUE0QixNQUE1QixDQUFYO0FBQ0FDLEVBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZakIsSUFBSSxDQUFDa0IsUUFBTCxFQUFaO0FBQ0gsQ0FIRCxDQUdFLE9BQU1DLENBQU4sRUFBUztBQUNQSCxFQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWSxRQUFaLEVBQXNCRSxDQUFDLENBQUNDLEtBQXhCO0FBQ0g7O0FBRURKLE9BQU8sQ0FBQ0MsR0FBUixDQUFZLG9DQUFaLEUsQ0FDQSIsInNvdXJjZVJvb3QiOiJDOlxcVXNlcnNcXEFsaXNhXFxEb2N1bWVudHNcXEdpdEh1YlxcVHJlbmRpbmdDb2luc1xcbm9kZVxcIiwic291cmNlc0NvbnRlbnQiOlsicmVxdWlyZSgnZG90ZW52JykuY29uZmlnKClcclxuY29uc3QgU3RyZWFtckNsaWVudCA9IHJlcXVpcmUoJ3N0cmVhbXItY2xpZW50JylcclxudmFyIGZzID0gcmVxdWlyZSgnZnMnKVxyXG5cclxuXHJcbmNvbnN0IHB1Ymxpc2hEYXRhVG9TdHJlYW0gPSBhc3luYyBkYXRhID0+IHtcclxuICAgIHJldHVybiBuZXcgUHJvbWlzZSggKHJlc29sdmUsIHJlamVjdCkgPT4ge1xyXG4gICAgICAgIGlmICghcHJvY2Vzcy5lbnZbJ1NUUkVBTVJfUFJJVkFURV9LRVknXSkge1xyXG4gICAgICAgICAgICByZWplY3QobmV3IEVycm9yKCdTdHJlYW1yIFByaXZhdGUgS2V5IGlzIHJlcXVpcmVkJykpXHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBpZiAoIXByb2Nlc3MuZW52WydTVFJFQU1SX0lEJ10pIHtcclxuICAgICAgICAgICAgcmVqZWN0KG5ldyBFcnJvcignU3RyZWFtciBTdHJlYW0gSUQgaXMgcmVxdWlyZWQnKSlcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIGNvbnN0IGNsaWVudCA9IG5ldyBTdHJlYW1yQ2xpZW50KHtcclxuICAgICAgICAgICAgYXV0aDoge1xyXG4gICAgICAgICAgICAgICAgcHJpdmF0ZUtleTogcHJvY2Vzcy5lbnYuU1RSRUFNUl9QUklWQVRFX0tFWSxcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0pXHJcblxyXG4gICAgICAgIGNsaWVudC5wdWJsaXNoKHByb2Nlc3MuZW52WydTVFJFQU1SX0lEJ10sIGRhdGEpXHJcbiAgICAgICAgICAgIC50aGVuKCgpID0+IHJlc29sdmUoZGF0YSkpXHJcbiAgICAgICAgICAgIC5jYXRjaChlcnJvciA9PiByZWplY3QoZXJyb3IpKVxyXG4gICAgfSlcclxufVxyXG5cclxudHJ5IHtcclxuICAgIHZhciBkYXRhID0gZnMucmVhZEZpbGVTeW5jKCdmaWxlLnR4dCcsICd1dGY4Jyk7XHJcbiAgICBjb25zb2xlLmxvZyhkYXRhLnRvU3RyaW5nKCkpO1xyXG59IGNhdGNoKGUpIHtcclxuICAgIGNvbnNvbGUubG9nKCdFcnJvcjonLCBlLnN0YWNrKTtcclxufVxyXG5cclxuY29uc29sZS5sb2coJ2FwcC5qcyAtIHB1Ymxpc2hpbmcgZGF0YSB0byBzdHJlYW0nKVxyXG4vLyBwdWJsaXNoRGF0YVRvU3RyZWFtKHJlc3BvbnNlKSlcclxuIl19",
    "map": {
      "version": 3,
      "sources": [
        "app.js"
      ],
      "names": [
        "require",
        "config",
        "StreamrClient",
        "fs",
        "publishDataToStream",
        "data",
        "Promise",
        "resolve",
        "reject",
        "process",
        "env",
        "Error",
        "client",
        "auth",
        "privateKey",
        "STREAMR_PRIVATE_KEY",
        "publish",
        "then",
        "catch",
        "error",
        "readFileSync",
        "console",
        "log",
        "toString",
        "e",
        "stack"
      ],
      "mappings": ";;AAAAA,OAAO,CAAC,QAAD,CAAP,CAAkBC,MAAlB;;AACA,MAAMC,aAAa,GAAGF,OAAO,CAAC,gBAAD,CAA7B;;AACA,IAAIG,EAAE,GAAGH,OAAO,CAAC,IAAD,CAAhB;;AAGA,MAAMI,mBAAmB,GAAG,MAAMC,IAAN,IAAc;AACtC,SAAO,IAAIC,OAAJ,CAAa,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACrC,QAAI,CAACC,OAAO,CAACC,GAAR,CAAY,qBAAZ,CAAL,EAAyC;AACrCF,MAAAA,MAAM,CAAC,IAAIG,KAAJ,CAAU,iCAAV,CAAD,CAAN;AACH;;AAED,QAAI,CAACF,OAAO,CAACC,GAAR,CAAY,YAAZ,CAAL,EAAgC;AAC5BF,MAAAA,MAAM,CAAC,IAAIG,KAAJ,CAAU,+BAAV,CAAD,CAAN;AACH;;AAED,UAAMC,MAAM,GAAG,IAAIV,aAAJ,CAAkB;AAC7BW,MAAAA,IAAI,EAAE;AACFC,QAAAA,UAAU,EAAEL,OAAO,CAACC,GAAR,CAAYK;AADtB;AADuB,KAAlB,CAAf;AAMAH,IAAAA,MAAM,CAACI,OAAP,CAAeP,OAAO,CAACC,GAAR,CAAY,YAAZ,CAAf,EAA0CL,IAA1C,EACKY,IADL,CACU,MAAMV,OAAO,CAACF,IAAD,CADvB,EAEKa,KAFL,CAEWC,KAAK,IAAIX,MAAM,CAACW,KAAD,CAF1B;AAGH,GAlBM,CAAP;AAmBH,CApBD;;AAsBA,IAAI;AACA,MAAId,IAAI,GAAGF,EAAE,CAACiB,YAAH,CAAgB,UAAhB,EAA4B,MAA5B,CAAX;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYjB,IAAI,CAACkB,QAAL,EAAZ;AACH,CAHD,CAGE,OAAMC,CAAN,EAAS;AACPH,EAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBE,CAAC,CAACC,KAAxB;AACH;;AAEDJ,OAAO,CAACC,GAAR,CAAY,oCAAZ,E,CACA",
      "sourceRoot": "C:\\Users\\Alisa\\Documents\\GitHub\\TrendingCoins\\node\\",
      "sourcesContent": [
        "require('dotenv').config()\r\nconst StreamrClient = require('streamr-client')\r\nvar fs = require('fs')\r\n\r\n\r\nconst publishDataToStream = async data => {\r\n    return new Promise( (resolve, reject) => {\r\n        if (!process.env['STREAMR_PRIVATE_KEY']) {\r\n            reject(new Error('Streamr Private Key is required'))\r\n        }\r\n\r\n        if (!process.env['STREAMR_ID']) {\r\n            reject(new Error('Streamr Stream ID is required'))\r\n        }\r\n\r\n        const client = new StreamrClient({\r\n            auth: {\r\n                privateKey: process.env.STREAMR_PRIVATE_KEY,\r\n            }\r\n        })\r\n\r\n        client.publish(process.env['STREAMR_ID'], data)\r\n            .then(() => resolve(data))\r\n            .catch(error => reject(error))\r\n    })\r\n}\r\n\r\ntry {\r\n    var data = fs.readFileSync('file.txt', 'utf8');\r\n    console.log(data.toString());\r\n} catch(e) {\r\n    console.log('Error:', e.stack);\r\n}\r\n\r\nconsole.log('app.js - publishing data to stream')\r\n// publishDataToStream(response))\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1635222177055
  }
}